name: Build and Deploy API Users

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:  # Permitir ejecuci√≥n manual

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Print repository status
        run: git log -1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERPASSWORD }}" | docker login -u ${{ secrets.DOCKERUSERNAME }} --password-stdin

      - name: Build and push Docker image for API Users
        run: |
          docker buildx build --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" \
                              --build-arg DATABASE_USERNAME="${{ secrets.DATABASE_USERNAME }}" \
                              --build-arg DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}" \
                              --build-arg AZURE_BLOB_STORAGE_CONNECTION_STRING="${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}" \
                              --build-arg AZURE_BLOB_STORAGE_CONTAINER_NAME="${{ secrets.AZURE_BLOB_STORAGE_CONTAINER_NAME }}" \
                              --build-arg AZURE_STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
                              --build-arg AZURE_BLOB_STORAGE_ENDPOINT="${{ secrets.AZURE_BLOB_STORAGE_ENDPOINT }}" \
                              -t ${{ secrets.DOCKERUSERNAME }}/apiusers:latest -f Dockerfile --push .
      - name: Configure kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Apply Kubernetes manifests for production
        if: github.ref == 'refs/heads/main'
        run: |
          kubectl apply -f manifiest/production-namespace.yaml
          kubectl apply -f manifiest/production-deployment.yaml
          kubectl apply -f manifiest/production-services.yaml